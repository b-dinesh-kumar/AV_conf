{
  "openapi": "3.0.0",
  "info": {
    "title": "AV conference API",
    "version": "2.0",
    "description": "API documentation for the AV conference",
    "contact": {
      "name": "Dineshkumar",
      "email": "dineshkumar.b@tra-augment.com",
      "url": "http://www.3edge.in"
    },
    "termsOfService": "https://www.termsofservice.com",
    "license": {
      "name": "MIT",
      "url": "https://github.com/b-dinesh-kumar/AV_conf/"
    }
  },
  "servers": [
    {
      "url": "https://jitsitomcat3edge.freemyip.com/conference/v2",
      "description": ""
    }
  ],
  "paths": {
    "/meeting": {
      "get": {
        "summary": "Get all the meeting details",
        "tags": [
          "Meeting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "$ref": "../model/common/Pagination.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "../model/common/Meetings.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "pagination": {
                        "totalRecords": 25,
                        "limit": 20,
                        "page": 1
                      },
                      "data": [
                        {
                          "allowAnonymousUsers": true,
                          "businessEntityId": 1,
                          "meetingId": "85571e49-aa3e-4a0f-aa95-15b87793d01b",
                          "schEndTime": "2020-11-04T11:30:00Z",
                          "showRecording": true,
                          "schStartTime": "2020-11-04T10:30:00Z",
                          "isAutoRecEnabled": true,
                          "meetingUrl": "https://video.3edge.in:5000/a2f987292",
                          "isScreenshareUsed": true,
                          "meetingTimings": [
                            {
                              "actStartTime": "2020-10-28T15:20:00Z",
                              "actEndTime": "2020-10-28T16:15:00Z"
                            }
                          ],
                          "isWaitRoomEnabled": true,
                          "meetingName": "Sprin meeting",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "This meeting is about sprint 2",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 3,
                            "statusName": "Completed"
                          }
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting",
        "description": "Retrieve all the meeting details.",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 1
            },
            "in": "query",
            "name": "page",
            "description": "Filter the meetings by the given page no"
          },
          {
            "schema": {
              "type": "number",
              "example": 10
            },
            "in": "query",
            "name": "size",
            "description": "Limit the size of the data"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 4,
              "example": 1
            },
            "in": "query",
            "name": "status",
            "description": "Filter the meetings by the given status id \nEg: 1 - Scheduled,\n    2 - In progress,\n    3 - Completed,\n    4 - Cancelled"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-10-07"
            },
            "in": "query",
            "name": "from",
            "description": "Filter the data by the start date"
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-10-15",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "description": "Filter the data by the end date"
          },
          {
            "schema": {
              "type": "number",
              "example": 10
            },
            "in": "query",
            "name": "month",
            "description": "Filter the meetings by the given month"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort the page by ascending or descending order\nEg: asc - sort by ascending,\n    desc- sort by descending"
          },
          {
            "schema": {
              "type": "string",
              "example": "0e63df57-a21b-4264-bd90-2657ce94d2d1"
            },
            "in": "query",
            "name": "createdBy",
            "description": "Filter the meetings by the scheduler"
          },
          {
            "schema": {
              "type": "string",
              "example": "0e63df57-a21b-4264-bd90-2657ce94d2d1"
            },
            "in": "query",
            "name": "organizer",
            "description": "Filter the meetings by the organizer"
          },
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "schema": {
              "type": "string",
              "example": "%2B5:30"
            },
            "in": "query",
            "name": "timeZone",
            "description": "To convert the UTC time zone into given time zone ( use %2B for plus(+) symbol and use %2D for mius(-) symbol, Eg: %2B5:30)"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create Meeting",
        "operationId": "post-meeting",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "meetingId": {
                          "type": "string",
                          "example": "342a7e48-8626-40e2-8e16-547c2a1c49c8"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "meetingId": "342a7e48-8626-40e2-8e16-547c2a1c49c8"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Meeting name already present in the mentioned time",
                          "errorCode": "101"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "End time should be greater than Start time",
                          "errorCode": "102"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (3)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Start date cannot be past date",
                          "errorCode": "103"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a meeting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "schStartTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-11-02T10:30:00Z"
                  },
                  "schEndTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-11-02T11:30:00Z"
                  },
                  "meetingName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Sprint Meeting"
                  },
                  "meetingDesc": {
                    "type": "string",
                    "minLength": 1,
                    "example": "This meeting is about sprint 2"
                  },
                  "isWaitRoomEnabled": {
                    "type": "boolean"
                  },
                  "allowAnonymousUsers": {
                    "type": "boolean"
                  },
                  "isScreenshareUsed": {
                    "type": "boolean"
                  },
                  "isRecordingUsed": {
                    "type": "boolean"
                  },
                  "isAudioUsed": {
                    "type": "boolean"
                  },
                  "allowUsersInWaitRoom": {
                    "type": "boolean"
                  },
                  "isVideoUsed": {
                    "type": "boolean"
                  },
                  "isAutoRecEnabled": {
                    "type": "boolean"
                  },
                  "showRecording": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "schStartTime",
                  "schEndTime",
                  "meetingName",
                  "meetingDesc"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "schStartTime": "2020-11-02T10:30:00Z",
                    "schEndTime": "2020-11-02T11:30:00Z",
                    "meetingName": "Sprint Meeting",
                    "meetingDesc": "This meeting is about sprint 2",
                    "isWaitRoomEnabled": true,
                    "allowAnonymousUsers": true,
                    "isScreenshareUsed": true,
                    "isRecordingUsed": true,
                    "isAudioUsed": true,
                    "allowUsersInWaitRoom": true,
                    "isVideoUsed": true,
                    "isAutoRecEnabled": true,
                    "showRecording": true
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Details to create a meeting."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Meeting"
        ]
      }
    },
    "/meeting/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get meeting details by id",
        "tags": [
          "Meeting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Meeting.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "allowAnonymousUsers": true,
                        "meetingId": "85571e49-aa3e-4a0f-aa95-15b87793d01b",
                        "schEndTime": "2020-11-04T11:30:00Z",
                        "showRecording": true,
                        "schStartTime": "2020-11-04T10:30:00Z",
                        "isAutoRecEnabled": true,
                        "businessEntity": {
                          "businessEnitytId": 1,
                          "businessEnityName": "Focus",
                          "logo": "/business/focus.jpg"
                        },
                        "meetingUrl": "https://video.3edge.in:5000/a2f987292",
                        "isScreenshareUsed": true,
                        "meetingTimings": [
                          {
                            "actStartTime": "2020-10-28T15:20:00Z",
                            "actEndTime": "2020-10-28T16:15:00Z"
                          }
                        ],
                        "isWaitRoomEnabled": true,
                        "meetingName": "Sprint Meeting",
                        "waitRoomId": "025c44b020a",
                        "isRecordingUsed": true,
                        "isAudioUsed": true,
                        "meetingDesc": "This meeting is about sprint 2",
                        "isVideoUsed": true,
                        "allowUsersInWaitRoom": true,
                        "status": {
                          "statusId": 3,
                          "statusName": "Completed"
                        }
                      },
                      "status": "success"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "actEndTime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "meetingId": {
                            "type": "string"
                          },
                          "schEndTime": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-meeting-id",
        "description": "Retrieve the meeting details by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ]
      },
      "delete": {
        "summary": "Delete meeting details by id",
        "operationId": "delete-meeting-id",
        "responses": {
          "204": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Deleted successfully"
                      },
                      "staus": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Delete the meeting by id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Meeting"
        ]
      },
      "patch": {
        "summary": "Update meeting details by id",
        "operationId": "patch-meeting-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Update the meeting by id.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "schStartTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-11-02T10:30:00Z"
                  },
                  "schEndTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-11-02T11:30:00Z"
                  },
                  "statusId": {
                    "type": "number",
                    "example": 4
                  },
                  "meetingName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Sprint Meeting"
                  },
                  "meetingDesc": {
                    "type": "string",
                    "minLength": 1,
                    "example": "This meeting is about sprint 2"
                  },
                  "isWaitRoomEnabled": {
                    "type": "boolean"
                  },
                  "allowAnonymousUsers": {
                    "type": "boolean"
                  },
                  "isScreenshareUsed": {
                    "type": "boolean"
                  },
                  "isRecordingUsed": {
                    "type": "boolean"
                  },
                  "isAudioUsed": {
                    "type": "boolean"
                  },
                  "allowUsersInWaitRoom": {
                    "type": "boolean"
                  },
                  "isVideoUsed": {
                    "type": "boolean"
                  },
                  "isAutoRecEnabled": {
                    "type": "boolean"
                  },
                  "showRecording": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "schStartTime",
                  "schEndTime",
                  "statusId",
                  "meetingName",
                  "meetingDesc",
                  "isWaitRoomEnabled",
                  "allowAnonymousUsers",
                  "isScreenshareUsed",
                  "isRecordingUsed",
                  "isAudioUsed",
                  "allowUsersInWaitRoom",
                  "isVideoUsed",
                  "isAutoRecEnabled",
                  "showRecording"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "schStartTime": "2020-11-02T10:30:00Z",
                    "schEndTime": "2020-11-02T11:30:00Z",
                    "statusId": 4,
                    "meetingName": "Sprint Meeting",
                    "meetingDesc": "This meeting is about sprint 2",
                    "isWaitRoomEnabled": true,
                    "allowAnonymousUsers": true,
                    "isScreenshareUsed": true,
                    "isRecordingUsed": true,
                    "isAudioUsed": true,
                    "allowUsersInWaitRoom": true,
                    "isVideoUsed": true,
                    "isAutoRecEnabled": true,
                    "showRecording": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Meeting"
        ]
      }
    },
    "/meeting/{id}/participants": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the participants",
        "tags": [
          "Partcipants"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "stealthMode": {
                            "type": "boolean"
                          },
                          "isOrganizer": {
                            "type": "boolean"
                          },
                          "meetingUserId": {
                            "type": "number",
                            "example": 74
                          },
                          "meetingId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "b745a235-0036-4740-8c65-3113d9d5bb3b"
                          },
                          "anonymousUser": {
                            "type": "object",
                            "properties": {
                              "anonymousUserId": {
                                "type": "number"
                              },
                              "emailId": {
                                "type": "string"
                              }
                            }
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "emailId": {
                                "type": "string",
                                "minLength": 1
                              },
                              "userId": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "required": [
                          "stealthMode",
                          "isOrganizer",
                          "meetingUserId",
                          "meetingId"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "stealthMode": true,
                          "isOrganizer": true,
                          "meetingUserId": 83,
                          "meetingId": "b745a235-0036-4740-8c65-3113d9d5bb3b",
                          "anonymousUser": {},
                          "user": {
                            "emailId": "brad.p@tra-augment.com",
                            "userId": "d035ccbb-e4cc-44e2-ae21-b61928813f04"
                          }
                        }
                      ],
                      "status": "successs"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "stealthMode": true,
                          "isOrganizer": false,
                          "meetingUserId": 83,
                          "meetingId": "b745a235-0036-4740-8c65-3113d9d5bb3b",
                          "anonymousUser": {
                            "anonymousUserId": 84,
                            "emailId": "rajesh.a@gamil.com"
                          },
                          "user": {}
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-meeting-id-participants",
        "description": "Retrieve list of participants of the meeting",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ]
      },
      "post": {
        "summary": "Add participants",
        "operationId": "post-meeting-id-participants",
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Participants added successfully"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Participants added successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Add participants to the meeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "stealthMode": {
                          "type": "boolean"
                        },
                        "isOrganizer": {
                          "type": "boolean"
                        },
                        "userId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "d035ccbb-e4cc-44e2-ae21-b61928813f04"
                        }
                      },
                      "required": [
                        "stealthMode",
                        "isOrganizer",
                        "userId"
                      ]
                    }
                  },
                  "isInvitationNeed": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "users"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "users": [
                      {
                        "stealthMode": true,
                        "isOrganizer": true,
                        "userId": "d035ccbb-e4cc-44e2-ae21-b61928813f04"
                      }
                    ],
                    "isInvitationNeed": true
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Partcipants"
        ]
      },
      "patch": {
        "summary": "Update participants",
        "operationId": "patch-meeting-id-participants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Update the details of the participants",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "stealthMode": {
                          "type": "boolean"
                        },
                        "isOrganizer": {
                          "type": "boolean"
                        },
                        "meetingUserId": {
                          "type": "number",
                          "example": 45
                        }
                      },
                      "required": [
                        "stealthMode",
                        "isOrganizer",
                        "meetingUserId"
                      ]
                    }
                  }
                },
                "required": [
                  "users"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "users": [
                      {
                        "stealthMode": true,
                        "isOrganizer": true,
                        "meetingUserId": 45
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Partcipants"
        ]
      },
      "delete": {
        "summary": "Delete participants",
        "operationId": "delete-meeting-id-participants",
        "responses": {
          "204": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Deleted successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Delete the participants of the meeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "example": 83
                    }
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "users": [
                      45
                    ]
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "tags": [
          "Partcipants"
        ]
      }
    },
    "/meeting/{id}/participants/{uId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "uId",
          "in": "path",
          "required": true,
          "description": "[GET,POST]-Meeting user id, [PATCH] - User session id"
        }
      ],
      "get": {
        "summary": "Get user sessions",
        "tags": [
          "UserSession"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/User-session.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "meeetingUserId": 66,
                          "reason": {
                            "reasonId": 1,
                            "reasonName": "Disconnected"
                          },
                          "exitTime": "2020-10-28T15:32:32Z",
                          "downloadSpeed": 5048,
                          "joinTime": "2020-10-28T15:22:32Z",
                          "uploadSpeed": 5048,
                          "userSessionId": 69,
                          "device": {
                            "deviceId": 3,
                            "deviceName": "Mobile"
                          }
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-meeting-id-participants-meetingUserId",
        "description": "Retrieve the user session details",
        "parameters": []
      },
      "post": {
        "summary": "Create user session",
        "operationId": "post-meeting-id-participants-meetingUserId",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "userSessionId": {
                          "type": "string",
                          "example": "12"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2ZDIwZjI0My05NDdjLTQ0YjQtYmMyNy1iMjljZjFlZGY4MGUiLCJleHAiOjE2MDkzMjg3NzIsImlhdCI6MTYwOTE1NTk3Mn0.syoc5DEIIw2daQC11MqLjbiqq5NNE2_N5-mgr9A-xiZLq9pjhDXlkQ69LBGe_7MIH9CaQu1JgJYlUyypqpMEbg"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "userSessionId": "12",
                        "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2ZDIwZjI0My05NDdjLTQ0YjQtYmMyNy1iMjljZjFlZGY4MGUiLCJleHAiOjE2MDkzMjg3NzIsImlhdCI6MTYwOTE1NTk3Mn0.syoc5DEIIw2daQC11MqLjbiqq5NNE2_N5-mgr9A-xiZLq9pjhDXlkQ69LBGe_7MIH9CaQu1JgJYlUyypqpMEbg"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "Create the user session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "joinTime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-10-07T10:30:00Z"
                  },
                  "deviceId": {
                    "type": "number",
                    "example": 1
                  },
                  "uploadSpeed": {
                    "type": "number",
                    "example": 5048
                  },
                  "downloadSpeed": {
                    "type": "number",
                    "example": 5048
                  }
                },
                "required": [
                  "joinTime",
                  "deviceId",
                  "uploadSpeed",
                  "downloadSpeed"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "joinTime": "2020-10-07T10:30:00Z",
                    "deviceId": 1,
                    "uploadSpeed": 5048,
                    "downloadSpeed": 5048
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [],
        "tags": [
          "UserSession"
        ]
      },
      "patch": {
        "summary": "Update user session",
        "operationId": "patch-meeting-id-participants-uId",
        "description": "Update the user session by user session id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exitTime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-10-07T10:50:00Z"
                  },
                  "reasonId": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "exitTime": "2020-10-07T10:50:00Z",
                    "reasonId": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "parameters": [],
        "tags": [
          "UserSession"
        ]
      }
    },
    "/meeting/{id}/statistics": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get meeting statistics",
        "tags": [
          "Statistics"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "stealthMode": {
                            "type": "boolean"
                          },
                          "isOrganizer": {
                            "type": "boolean"
                          },
                          "meetingUserId": {
                            "type": "number",
                            "example": 45
                          },
                          "sessionDetails": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "$ref": "../model/common/Session-Details.v1.json"
                            }
                          },
                          "anonymousUser": {
                            "type": "object",
                            "properties": {
                              "anonymousUserId": {
                                "type": "number"
                              },
                              "emailId": {
                                "type": "string"
                              },
                              "userName": {
                                "type": "string"
                              }
                            }
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "emailId": {
                                "type": "string",
                                "minLength": 1,
                                "example": "christoper.n@tra-augment.com"
                              },
                              "userName": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Christoper Nolan"
                              },
                              "userId": {
                                "type": "string",
                                "minLength": 1,
                                "example": "8478cab8-8070-4072-a893-299ebafd1a6f"
                              }
                            }
                          }
                        },
                        "required": [
                          "stealthMode"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "stealthMode": false,
                          "isOrganizer": true,
                          "meetingUserId": 87,
                          "sessionDetails": [
                            {
                              "reason": "Disconnected",
                              "exitTime": "2020-10-07T10:50:00Z",
                              "joinTime": "2020-10-07T10:30:00Z",
                              "uploadSpeed": 5048,
                              "downloadSpeed": 5048,
                              "device": "Web"
                            }
                          ],
                          "anonymousUser": {},
                          "user": {
                            "emailId": "brad.p@tra-augment.com",
                            "userName": "Brad Pitt",
                            "userId": "d035ccbb-e4cc-44e2-ae21-b61928813f04"
                          }
                        }
                      ],
                      "status": "success"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "stealthMode": false,
                          "isOrganizer": true,
                          "meetingUserId": 87,
                          "sessionDetails": [
                            {
                              "reason": "Disconnected",
                              "exitTime": "2020-10-07T10:50:00Z",
                              "joinTime": "2020-10-07T10:30:00Z",
                              "uploadSpeed": 5048,
                              "downloadSpeed": 5048,
                              "device": "Web"
                            }
                          ],
                          "anonymousUser": {
                            "anonymousUserId": 90,
                            "emailId": "sathish.a@gamil.com",
                            "userName": "Sathish"
                          },
                          "user": {}
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-meeting-id-statistics",
        "description": "Retrieve the meeting statistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ]
      }
    },
    "/meeting/{id}/timing": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "post": {
        "summary": "Create meeting timing",
        "operationId": "post-meeting-id-timing",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "timingId"
                      ],
                      "properties": {
                        "timingId": {
                          "type": "number",
                          "example": 92
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "timingId": 92
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "To create the actual start time of the meeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-10-28T16:15:00Z"
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "startTime": "2020-10-28T16:15:00Z"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [],
        "tags": [
          "MeetingTiming"
        ]
      },
      "patch": {
        "summary": "Update meeting timing",
        "operationId": "patch-meeting-id-timing",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "To create the actual end time of the meeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "endTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-11-01T14:25:00Z"
                  },
                  "timingId": {
                    "type": "number",
                    "example": 92
                  }
                },
                "required": [
                  "endTime",
                  "timingId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "endTime": "2020-11-01T14:25:00Z",
                    "timingId": 92
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "tags": [
          "MeetingTiming"
        ]
      }
    },
    "/users/{beId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "beId",
          "in": "path",
          "required": true,
          "description": "Business entity id"
        }
      ],
      "get": {
        "summary": "Get all the users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "object",
                            "properties": {
                              "roleId": {
                                "type": "number",
                                "example": 2
                              },
                              "roleName": {
                                "type": "string",
                                "minLength": 1,
                                "example": "admin"
                              }
                            },
                            "required": [
                              "roleId",
                              "roleName"
                            ]
                          },
                          "profileImagePath": {
                            "type": "string",
                            "example": "https://www.azure.com/focus/profileImages/3fer34d3rffd.jpeg"
                          },
                          "emailId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "hugh.j@tra-augment.com"
                          },
                          "userName": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Hugh jackman"
                          },
                          "userId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "6a2097f6-4d1b-4a44-a232-fb73db138ee9"
                          }
                        },
                        "required": [
                          "profileImagePath",
                          "emailId",
                          "userName",
                          "userId"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "role": {
                            "roleId": 2,
                            "roleName": "admin"
                          },
                          "profileImagePath": "https://www.azure.com/focus/profileImages/3fer34d3rffd.jpeg",
                          "emailId": "hugh.j@tra-augment.com",
                          "userName": "Hugh jackman",
                          "userId": "6a2097f6-4d1b-4a44-a232-fb73db138ee9"
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-users-beId",
        "description": "Retrieve all the users in the entity",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 1
            },
            "in": "query",
            "name": "page",
            "description": "Filter the data by the given page no"
          },
          {
            "schema": {
              "type": "number",
              "example": 10
            },
            "in": "query",
            "name": "size",
            "description": "Limit the size of the data"
          },
          {
            "schema": {
              "type": "string",
              "example": "hugh.j@tra-augment.com"
            },
            "in": "query",
            "name": "startsWith",
            "description": "Filter the data by the email id"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isAdmin",
            "description": "To get all the admins"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isOrganizer",
            "description": "To get all the organizers"
          },
          {
            "schema": {
              "type": "string",
              "example": "bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwOTUxMDQsImlhdCI6MTYwNjkyMjMwNH0.1YDMiaCXjH5UYxpE_RTJtQPb_eiteJY6Umy7JVOD5gpvwv0_d-bEdSPllqvU9H6eSCRGGk9VQbo5bsWVyu5wzw"
            },
            "in": "header",
            "name": "Authorization",
            "description": "bearer token",
            "required": true
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/meeting/generateToken": {
      "post": {
        "summary": "Generate Token",
        "operationId": "post-meeting-generateToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "meeting",
                        "token"
                      ],
                      "properties": {
                        "meeting": {
                          "type": "object",
                          "required": [
                            "allowAnonymousUsers",
                            "meetingId",
                            "schEndTime",
                            "schStartTime",
                            "businessEntity",
                            "meetingUrl",
                            "isScreenshareUsed",
                            "isWaitRoomEnabled",
                            "meetingName",
                            "isRecordingUsed",
                            "isAudioUsed",
                            "meetingDesc",
                            "isVideoUsed",
                            "allowUsersInWaitRoom",
                            "status"
                          ],
                          "properties": {
                            "allowAnonymousUsers": {
                              "type": "boolean"
                            },
                            "meetingId": {
                              "type": "string",
                              "minLength": 1,
                              "example": "b5773f64-c054-4871-b8e1-abcd6bf4ec00"
                            },
                            "schEndTime": {
                              "type": "string",
                              "minLength": 1,
                              "example": "2020-11-02T16:30:00Z"
                            },
                            "schStartTime": {
                              "type": "string",
                              "minLength": 1,
                              "example": "2020-11-02T15:30:00Z"
                            },
                            "businessEntity": {
                              "$ref": "../model/common/Business-entity.v1.json"
                            },
                            "meetingUrl": {
                              "type": "string",
                              "minLength": 1,
                              "example": "https://video.3edge.in:5000/c22936942"
                            },
                            "isScreenshareUsed": {
                              "type": "boolean"
                            },
                            "isWaitRoomEnabled": {
                              "type": "boolean"
                            },
                            "meetingName": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Sprint meeting"
                            },
                            "isRecordingUsed": {
                              "type": "boolean"
                            },
                            "isAudioUsed": {
                              "type": "boolean"
                            },
                            "meetingDesc": {
                              "type": "string",
                              "minLength": 1,
                              "example": "This meeting is about sprint 2"
                            },
                            "isVideoUsed": {
                              "type": "boolean"
                            },
                            "allowUsersInWaitRoom": {
                              "type": "boolean"
                            },
                            "status": {
                              "$ref": "../model/common/Status.v1.json"
                            }
                          }
                        },
                        "token": {
                          "type": "string",
                          "minLength": 1,
                          "example": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjMjI5MzY5NDIiLCJleHAiOjE2MDQyNDAyNDIsInVzZXJJZCI6ImQwMzVjY2JiLWU0Y2MtNDRlMi1hZTIxLWI2MTkyODgxM2YwNCIsImlhdCI6MTYwNDIzOTM0Mn0.jx713wF6bOjktogIT_njJXochHsPHVUova045Glhe4J4Uxmpk3dE3xfU60OibACZk8sG6bkmRLbMjUB0SNlpWg"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "meeting": {
                          "allowAnonymousUsers": true,
                          "meetingId": "b5773f64-c054-4871-b8e1-abcd6bf4ec00",
                          "schEndTime": "2020-11-02T16:30:00Z",
                          "schStartTime": "2020-11-02T15:30:00Z",
                          "businessEntity": {
                            "businessEnitytId": 1,
                            "businessEnityName": "Focus",
                            "logo": "/business/focus.jpg"
                          },
                          "meetingUrl": "https://video.3edge.in:5000/c22936942",
                          "isScreenshareUsed": true,
                          "isWaitRoomEnabled": true,
                          "meetingName": "Sprint meeting",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "This meeting is about sprint 2",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 1,
                            "statusName": "Scheduled"
                          }
                        },
                        "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJjMjI5MzY5NDIiLCJleHAiOjE2MDQyNDAyNDIsInVzZXJJZCI6ImQwMzVjY2JiLWU0Y2MtNDRlMi1hZTIxLWI2MTkyODgxM2YwNCIsImlhdCI6MTYwNDIzOTM0Mn0.jx713wF6bOjktogIT_njJXochHsPHVUova045Glhe4J4Uxmpk3dE3xfU60OibACZk8sG6bkmRLbMjUB0SNlpWg"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Forbidden",
                          "errorCode": "403"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To generate auhtentication token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "anonymousUserId": {
                    "type": "number",
                    "example": 180
                  },
                  "userId": {
                    "type": "string",
                    "minLength": 1,
                    "example": "6a2097f6-4d1b-4a44-a232-fb73db138ee9"
                  },
                  "meetingToken": {
                    "type": "string",
                    "minLength": 1,
                    "example": "1b12a1273"
                  }
                },
                "required": [
                  "meetingToken"
                ]
              },
              "examples": {
                "application/json (1)": {
                  "value": {
                    "userId": "d035ccbb-e4cc-44e2-ae21-b61928813f04",
                    "meetingToken": "c22936942"
                  }
                },
                "application/json (2)": {
                  "value": {
                    "anonymousUserId": 180,
                    "meetingToken": "c22936942"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Token"
        ]
      }
    },
    "/meeting/validateUser": {
      "post": {
        "summary": "Validate token",
        "operationId": "post-meeting-validateUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "allMeetingUser",
                        "meeting",
                        "meetingUser"
                      ],
                      "properties": {
                        "allMeetingUser": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "stealthMode": {
                                "type": "boolean"
                              },
                              "isAnonymous": {
                                "type": "boolean"
                              },
                              "isOrganizer": {
                                "type": "boolean"
                              },
                              "meetingUserId": {
                                "type": "number",
                                "example": 2570
                              },
                              "userName": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Brad Pitt"
                              }
                            },
                            "required": [
                              "stealthMode",
                              "isAnonymous",
                              "isOrganizer",
                              "meetingUserId",
                              "userName"
                            ]
                          }
                        },
                        "meeting": {
                          "type": "object",
                          "required": [
                            "allowAnonymousUsers",
                            "meetingId",
                            "schEndTime",
                            "schStartTime",
                            "businessEntity",
                            "meetingUrl",
                            "isScreenshareUsed",
                            "isWaitRoomEnabled",
                            "meetingName",
                            "isBreakoutRoom",
                            "waitRoomId",
                            "isRecordingUsed",
                            "isAudioUsed",
                            "meetingDesc",
                            "isVideoUsed",
                            "allowUsersInWaitRoom",
                            "status"
                          ],
                          "properties": {
                            "allowAnonymousUsers": {
                              "type": "boolean"
                            },
                            "breakoutRoom": {
                              "anyOf": []
                            },
                            "meetingId": {
                              "type": "string",
                              "minLength": 1,
                              "example": "5742baf4-cac5-4fb5-b8d8-4a79719699c7"
                            },
                            "schEndTime": {
                              "type": "string",
                              "minLength": 1,
                              "format": "date-time",
                              "example": "2021-01-30T12:30:00Z"
                            },
                            "schStartTime": {
                              "type": "string",
                              "minLength": 1,
                              "format": "date-time",
                              "example": "2021-01-12T14:53:40Z"
                            },
                            "businessEntity": {
                              "type": "object",
                              "required": [
                                "businessEntityId",
                                "logo",
                                "businessEntityName"
                              ],
                              "properties": {
                                "businessEntityId": {
                                  "type": "number",
                                  "example": 2
                                },
                                "logo": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "/conference/images/default.png"
                                },
                                "businessEntityName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "AV conference"
                                }
                              }
                            },
                            "meetingUrl": {
                              "type": "string",
                              "minLength": 1,
                              "example": "https://video.3edge.in/8fa006eac"
                            },
                            "isScreenshareUsed": {
                              "type": "boolean"
                            },
                            "isWaitRoomEnabled": {
                              "type": "boolean"
                            },
                            "meetingName": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Test meeting"
                            },
                            "isBreakoutRoom": {
                              "type": "boolean"
                            },
                            "waitRoomId": {
                              "type": "string",
                              "minLength": 1
                            },
                            "isRecordingUsed": {
                              "type": "boolean"
                            },
                            "isAudioUsed": {
                              "type": "boolean"
                            },
                            "meetingDesc": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Test meeting"
                            },
                            "isVideoUsed": {
                              "type": "boolean"
                            },
                            "allowUsersInWaitRoom": {
                              "type": "boolean"
                            },
                            "status": {
                              "$ref": "../model/common/Status.v1.json"
                            }
                          }
                        },
                        "meetingUser": {
                          "type": "object",
                          "required": [
                            "stealthMode",
                            "isOrganizer",
                            "meetingUserId",
                            "emailId",
                            "userName",
                            "userId"
                          ],
                          "properties": {
                            "stealthMode": {
                              "type": "boolean"
                            },
                            "isOrganizer": {
                              "type": "boolean"
                            },
                            "meetingUserId": {
                              "type": "number",
                              "example": 2568
                            },
                            "anonymousUserId": {},
                            "emailId": {
                              "type": "string",
                              "minLength": 1,
                              "example": "dinesh.b@tra-augment.com"
                            },
                            "userName": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Dinesh Kumar"
                            },
                            "userId": {
                              "type": "string",
                              "minLength": 1,
                              "example": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0s"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": {
                        "allMeetingUser": [
                          {
                            "stealthMode": true,
                            "isAnonymous": true,
                            "isOrganizer": true,
                            "meetingUserId": 2570,
                            "userName": "Brad Pitt"
                          }
                        ],
                        "meeting": {
                          "allowAnonymousUsers": true,
                          "breakoutRoom": {
                            "breakoutRoomId": 2567,
                            "countdownTimerStartsAt": 60,
                            "closeAfter": 600,
                            "canReturnToMainSession": true
                          },
                          "meetingId": "5742baf4-cac5-4fb5-b8d8-4a79719699c7",
                          "schEndTime": "2021-01-30T12:30:00Z",
                          "schStartTime": "2021-01-12T14:53:40Z",
                          "businessEntity": {
                            "businessEntityId": 2,
                            "logo": "/conference/images/default.png",
                            "businessEntityName": "AV conference"
                          },
                          "meetingUrl": "https://video.3edge.in/8fa006eac",
                          "isScreenshareUsed": true,
                          "isWaitRoomEnabled": true,
                          "meetingName": "Test meeting",
                          "isBreakoutRoom": true,
                          "waitRoomId": "dw3vjvv32d",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "The Test meeting",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 1,
                            "statusName": "Scheduled"
                          }
                        },
                        "meetingUser": {
                          "stealthMode": true,
                          "isOrganizer": true,
                          "meetingUserId": 2568,
                          "anonymousUserId": null,
                          "emailId": "dinesh.b@tra-augment.com",
                          "userName": "Dinesh Kumar",
                          "userId": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0s"
                        }
                      },
                      "status": "success"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": {
                        "allMeetingUser": [
                          {
                            "stealthMode": true,
                            "isAnonymous": true,
                            "isOrganizer": true,
                            "meetingUserId": 2570,
                            "userName": "Brad Pitt"
                          }
                        ],
                        "meeting": {
                          "allowAnonymousUsers": true,
                          "breakoutRoom": null,
                          "meetingId": "5742baf4-cac5-4fb5-b8d8-4a79719699c7",
                          "schEndTime": "2021-01-30T12:30:00Z",
                          "schStartTime": "2021-01-12T14:53:40Z",
                          "businessEntity": {
                            "businessEntityId": 2,
                            "logo": "/conference/images/default.png",
                            "businessEntityName": "AV conference"
                          },
                          "meetingUrl": "https://video.3edge.in/8fa006eac",
                          "isScreenshareUsed": true,
                          "isWaitRoomEnabled": true,
                          "meetingName": "Test meeting",
                          "isBreakoutRoom": false,
                          "waitRoomId": "dw3vjvv32d",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "The Test meeting",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 1,
                            "statusName": "Scheduled"
                          }
                        },
                        "meetingUser": {
                          "stealthMode": true,
                          "isOrganizer": true,
                          "meetingUserId": 2568,
                          "anonymousUserId": null,
                          "emailId": "dinesh.b@tra-augment.com",
                          "userName": "Dinesh Kumar",
                          "userId": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0s"
                        }
                      },
                      "status": "success"
                    }
                  },
                  "application/json (3)": {
                    "value": {
                      "data": {
                        "allMeetingUser": [
                          {
                            "stealthMode": true,
                            "isAnonymous": true,
                            "isOrganizer": true,
                            "meetingUserId": 2570,
                            "userName": "Brad Pitt"
                          }
                        ],
                        "meeting": {
                          "allowAnonymousUsers": true,
                          "breakoutRoom": null,
                          "meetingId": "5742baf4-cac5-4fb5-b8d8-4a79719699c7",
                          "schEndTime": "2021-01-30T12:30:00Z",
                          "schStartTime": "2021-01-12T14:53:40Z",
                          "businessEntity": {
                            "businessEntityId": 2,
                            "logo": "/conference/images/default.png",
                            "businessEntityName": "AV conference"
                          },
                          "meetingUrl": "https://video.3edge.in/8fa006eac",
                          "isScreenshareUsed": true,
                          "isWaitRoomEnabled": true,
                          "meetingName": "Test meeting",
                          "isBreakoutRoom": true,
                          "waitRoomId": "dw3vjvv32d",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "The Test meeting",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 1,
                            "statusName": "Scheduled"
                          }
                        },
                        "meetingUser": {
                          "stealthMode": true,
                          "isOrganizer": true,
                          "meetingUserId": 2568,
                          "anonymousUserId": 3110051,
                          "emailId": "dinesh.b@tra-augment.com",
                          "userName": "Dinesh Kumar",
                          "userId": null
                        }
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To validate the user by the given token",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token"
          }
        ],
        "tags": [
          "Token"
        ]
      }
    },
    "/meeting/details/{token}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "token",
          "in": "path",
          "required": true,
          "description": "Meeting token"
        }
      ],
      "get": {
        "summary": "Get meeting details by token",
        "tags": [
          "Meeting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "allowAnonymousUsers",
                        "meetingId",
                        "schEndTime",
                        "showRecording",
                        "schStartTime",
                        "isAutoRecEnabled",
                        "businessEntity",
                        "meetingUrl",
                        "isScreenshareUsed",
                        "isWaitRoomEnabled",
                        "meetingName",
                        "isRecordingUsed",
                        "isAudioUsed",
                        "meetingDesc",
                        "isVideoUsed",
                        "allowUsersInWaitRoom",
                        "status"
                      ],
                      "properties": {
                        "allowAnonymousUsers": {
                          "type": "boolean"
                        },
                        "meetingId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "eed4aad6-fcea-4b5b-9d05-ff772b039d6e"
                        },
                        "schEndTime": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "example": "2020-11-02T11:30:00Z"
                        },
                        "showRecording": {
                          "type": "boolean"
                        },
                        "schStartTime": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "example": "2020-11-02T11:30:00Z"
                        },
                        "isAutoRecEnabled": {
                          "type": "boolean"
                        },
                        "businessEntity": {
                          "$ref": "../model/common/Entity.v1.json"
                        },
                        "meetingUrl": {
                          "type": "string",
                          "minLength": 1,
                          "example": "https://video.3edge.in:5000/e0d6e41fa"
                        },
                        "isScreenshareUsed": {
                          "type": "boolean"
                        },
                        "isWaitRoomEnabled": {
                          "type": "boolean"
                        },
                        "meetingName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Sprint Meeting"
                        },
                        "isRecordingUsed": {
                          "type": "boolean"
                        },
                        "isAudioUsed": {
                          "type": "boolean"
                        },
                        "meetingDesc": {
                          "type": "string",
                          "minLength": 1,
                          "example": "This meeting is about sprint 2"
                        },
                        "isVideoUsed": {
                          "type": "boolean"
                        },
                        "allowUsersInWaitRoom": {
                          "type": "boolean"
                        },
                        "status": {
                          "$ref": "../model/common/Status.v1.json"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "allowAnonymousUsers": true,
                        "meetingId": "eed4aad6-fcea-4b5b-9d05-ff772b039d6e",
                        "schEndTime": "2020-11-02T11:30:00Z",
                        "showRecording": true,
                        "schStartTime": "2020-11-02T11:30:00Z",
                        "isAutoRecEnabled": true,
                        "businessEntity": {
                          "allowAutoSignUp": true,
                          "loginUrl": "https://test.sso.3edge.in",
                          "domainName": "focus",
                          "businessEntityId": 1,
                          "logo": "/conference/images/default.jpg",
                          "businessEntityName": "Focus",
                          "domainUrl": "video.3edge.in",
                          "autoApproveUser": true
                        },
                        "meetingUrl": "https://video.3edge.in:5000/e0d6e41fa",
                        "isScreenshareUsed": true,
                        "isWaitRoomEnabled": true,
                        "meetingName": "Sprint Meeting",
                        "isRecordingUsed": true,
                        "isAudioUsed": true,
                        "meetingDesc": "This meeting is about sprint 2",
                        "isVideoUsed": true,
                        "allowUsersInWaitRoom": true,
                        "status": {
                          "statusId": 3,
                          "statusName": "Completed"
                        }
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-details-token",
        "description": "Retrive meeting details by meeting token"
      }
    },
    "/user": {
      "post": {
        "summary": "Get user details",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "role",
                        "profileImagePath",
                        "emailId",
                        "businessEntity",
                        "userName",
                        "userId",
                        "token"
                      ],
                      "properties": {
                        "role": {
                          "type": "object",
                          "required": [
                            "roleId",
                            "roleName"
                          ],
                          "properties": {
                            "roleId": {
                              "type": "number",
                              "example": 2
                            },
                            "roleName": {
                              "type": "string",
                              "minLength": 1,
                              "example": "BE admin"
                            }
                          }
                        },
                        "profileImagePath": {
                          "type": "string",
                          "example": "/conference/images/user_images/profile_1605178865334.jpg"
                        },
                        "emailId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "dinesh.k@tra-augment.com"
                        },
                        "businessEntity": {
                          "$ref": "../model/common/Business-entity.v1.json"
                        },
                        "userName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Dinesh kumar"
                        },
                        "userId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "19428b05-4da5-45e2-b3ae-91022084c234"
                        },
                        "token": {
                          "type": "string",
                          "minLength": 1,
                          "example": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwNzYyMjMsImlhdCI6MTYwNjkwMzQyM30.LQgcuRMsDRM-YMXpWowEbIMzvPLoVIlaxprjgane03Gl1HL5b58TGOQUefSaBA0zMPLUna8TBz854BDeWqSvEQ"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "role": {
                          "roleId": 2,
                          "roleName": "BE admin"
                        },
                        "profileImagePath": "/conference/images/user_images/profile_1605178865334.jpg",
                        "emailId": "dinesh.k@tra-augment.com",
                        "businessEntity": {
                          "businessEnitytId": 1,
                          "businessEnityName": "Focus",
                          "logo": "/business/focus.jpg"
                        },
                        "userName": "Dinesh kumar",
                        "userId": "19428b05-4da5-45e2-b3ae-91022084c234",
                        "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwNzYyMjMsImlhdCI6MTYwNjkwMzQyM30.LQgcuRMsDRM-YMXpWowEbIMzvPLoVIlaxprjgane03Gl1HL5b58TGOQUefSaBA0zMPLUna8TBz854BDeWqSvEQ"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "errorMessage",
                        "errorCode"
                      ],
                      "properties": {
                        "errorMessage": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Invalid Credential!"
                        },
                        "errorCode": {
                          "type": "string",
                          "minLength": 1,
                          "example": "401"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "error"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "errorMessage": "Invalid Credential!",
                        "errorCode": "401"
                      },
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrive the user details by keycloak user id and business entity id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "businessEntityId": {
                    "type": "number",
                    "example": 150
                  },
                  "keycloakId": {
                    "type": "string",
                    "minLength": 1,
                    "example": "dinesh"
                  }
                },
                "required": [
                  "businessEntityId",
                  "keycloakId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "businessEntityId": 150,
                    "keycloakId": "dinesh"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/entity/{beId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "beId",
          "in": "path",
          "required": true,
          "description": "Entity id"
        }
      ],
      "get": {
        "summary": "Get business entity details by id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Entity.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "allowAutoSignUp": true,
                        "loginUrl": "https://test.sso.3edge.in",
                        "domainName": "focus",
                        "businessEntityId": 1,
                        "logo": "/conference/images/default.jpg",
                        "businessEntityName": "Focus",
                        "domainUrl": "video.3edge.in",
                        "autoApproveUser": true
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-entity-beId",
        "description": "Retrive business entity details by id",
        "tags": [
          "BusinessEntity"
        ]
      }
    },
    "/entity": {
      "get": {
        "summary": "Get business entity details",
        "tags": [
          "BusinessEntity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Entity.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "allowAutoSignUp": true,
                        "loginUrl": "https://test.sso.3edge.in",
                        "domainName": "focus",
                        "businessEntityId": 1,
                        "logo": "/conference/images/default.jpg",
                        "businessEntityName": "Focus",
                        "domainUrl": "video.3edge.in",
                        "autoApproveUser": true
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-entity",
        "description": "Retrive business entity details by domain URL",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "domainUrl",
            "description": "Domain url "
          }
        ]
      },
      "post": {
        "summary": "Create Business Entity",
        "operationId": "post-entity",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "businessEntityId"
                      ],
                      "properties": {
                        "businessEntityId": {
                          "type": "number",
                          "example": 300
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "businessEntityId": 300
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "errorMessage",
                        "errorCode"
                      ],
                      "properties": {
                        "errorMessage": {
                          "type": "string",
                          "minLength": 1,
                          "example": "An entity already exists with the given entity name"
                        },
                        "errorCode": {
                          "type": "string",
                          "minLength": 1,
                          "example": "110"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "error"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "errorMessage": "An entity already exists with the given entity name",
                        "errorCode": "110"
                      },
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a business entity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "businessEntityName",
                      "domainName",
                      "domainUrl",
                      "user"
                    ],
                    "properties": {
                      "businessEntityName": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Scribe EMR cloud"
                      },
                      "domainName": {
                        "type": "string",
                        "minLength": 1,
                        "example": "https://sandbox2.focusedumatics.com/ScribingSoftware1"
                      },
                      "domainUrl": {
                        "type": "string",
                        "minLength": 1,
                        "example": "scribecloud.admin.3edge.in"
                      },
                      "loginUrl": {
                        "type": "string",
                        "minLength": 1,
                        "example": "https://sandbox2.focusedumatics.com/ScribingSoftware1/"
                      },
                      "allowAutoSignUp": {
                        "type": "boolean"
                      },
                      "autoApproveUser": {
                        "type": "boolean"
                      },
                      "user": {
                        "type": "object",
                        "required": [
                          "firstName",
                          "lastName",
                          "emailId"
                        ],
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Dinesh"
                          },
                          "lastName": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Kumar"
                          },
                          "emailId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "dinesh.k@tra-augment.com"
                          }
                        }
                      }
                    }
                  },
                  "logo": {
                    "type": "string",
                    "example": "File upload"
                  }
                },
                "required": [
                  "data",
                  "logo"
                ]
              },
              "examples": {
                "multipart/form-data": {
                  "value": {
                    "data": {
                      "businessEntityName": "Scribe EMR cloud",
                      "domainName": "https://sandbox2.focusedumatics.com/ScribingSoftware1",
                      "domainUrl": "scribecloud.admin.3edge.in",
                      "loginUrl": "https://sandbox2.focusedumatics.com/ScribingSoftware1/",
                      "allowAutoSignUp": true,
                      "autoApproveUser": true,
                      "user": {
                        "firstName": "Dinesh",
                        "lastName": "Kumar",
                        "emailId": "dinesh.k@tra-augment.com"
                      }
                    },
                    "logo": "File upload"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "BusinessEntity"
        ]
      }
    },
    "/meeting/{id}/addParticipants": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "post": {
        "summary": "Add meeting participants",
        "operationId": "post-meeting-id-addParticipants",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Participants added successfully"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Participants added successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To add participants to the meeting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Dinesh"
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Kumar"
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "example": "dinesh.k@tra-augment.com"
                        },
                        "beUserId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "dineshkumar"
                        },
                        "isOrganizer": {
                          "type": "boolean"
                        },
                        "stealthMode": {
                          "type": "boolean"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "beUserId",
                        "isOrganizer",
                        "stealthMode"
                      ]
                    }
                  }
                },
                "required": [
                  "users"
                ]
              },
              "examples": {
                "application/json (1)": {
                  "value": {
                    "users": [
                      {
                        "firstName": "Dinesh",
                        "lastName": "Kumar",
                        "email": "dinesh.k@tra-augment.com",
                        "beUserId": "dineshkumar",
                        "isOrganizer": true,
                        "stealthMode": true,
                        "isAdmin": true
                      }
                    ]
                  }
                },
                "application/json (2)": {
                  "value": {
                    "users": [
                      {
                        "beUserId": "dineshkumar",
                        "isOrganizer": true,
                        "stealthMode": true,
                        "isAdmin": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Partcipants"
        ]
      }
    },
    "/handleVerification": {
      "get": {
        "summary": "Validate verification id",
        "tags": [
          "HandleVerfication"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "userID",
                        "firstName",
                        "lastName",
                        "email",
                        "responseId",
                        "sessionExpiry"
                      ],
                      "properties": {
                        "userID": {
                          "type": "string",
                          "minLength": 1,
                          "example": "christianbale"
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Christian"
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Bale"
                        },
                        "email": {
                          "type": "string",
                          "minLength": 1,
                          "example": "christian.b@tra-augment.com"
                        },
                        "responseId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "5da775f8-42f5-4ef1-8b55-8993d23589a0"
                        },
                        "sessionExpiry": {
                          "type": "object",
                          "required": [
                            "nano",
                            "epochSecond"
                          ],
                          "properties": {
                            "nano": {
                              "type": "number",
                              "example": 22000000
                            },
                            "epochSecond": {
                              "type": "number",
                              "example": 1606767221
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "userID": "christianbale",
                        "firstName": "Christian",
                        "lastName": "Bale",
                        "email": "christian.b@tra-augment.com",
                        "responseId": "5da775f8-42f5-4ef1-8b55-8993d23589a0",
                        "sessionExpiry": {
                          "nano": 22000000,
                          "epochSecond": 1606767221
                        }
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "errorMessage",
                        "errorCode"
                      ],
                      "properties": {
                        "errorMessage": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Invalid Credential!"
                        },
                        "errorCode": {
                          "type": "string",
                          "minLength": 1,
                          "example": "401"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "error"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "errorMessage": "Invalid Credential!",
                        "errorCode": "401"
                      },
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-handleVerification",
        "description": "To validate verification id",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "b8326caec71f479ea336dd76991b32c5"
            },
            "in": "header",
            "name": "Authorization",
            "description": "verificationId",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Generate verification id",
        "operationId": "post-handleVerification",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "verificationId"
                      ],
                      "properties": {
                        "verificationId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "2319f7e0e58045bdab1d680cbc94c05d"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "verificationId": "2319f7e0e58045bdab1d680cbc94c05d"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "minLength": 1,
                    "example": "christianbale"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Christian"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Bale"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "christian.b@tra-augment.com"
                  },
                  "responseId": {
                    "type": "string",
                    "minLength": 1,
                    "example": "5da775f8-42f5-4ef1-8b55-8993d23589a0"
                  },
                  "sessionExpiry": {
                    "type": "object",
                    "properties": {
                      "nano": {
                        "type": "number",
                        "example": 22000000
                      },
                      "epochSecond": {
                        "type": "number",
                        "example": 1606767221
                      }
                    }
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "userID": "christianbale",
                    "firstName": "Christian",
                    "lastName": "Bale",
                    "email": "christian.b@tra-augment.com",
                    "responseId": "5da775f8-42f5-4ef1-8b55-8993d23589a0",
                    "sessionExpiry": {
                      "nano": 22000000,
                      "epochSecond": 1606767221
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To generate verification id ",
        "tags": [
          "HandleVerfication"
        ]
      }
    },
    "/meeting/{id}/recording": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "041113d9-0796-4567-86b9-33b14ecd6764"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the recordings by meeting id",
        "tags": [
          "Recording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "bookmarks": {
                            "type": "array",
                            "items": {
                              "$ref": "../model/common/Bookmark.v1.json"
                            }
                          },
                          "fileName": {
                            "type": "string",
                            "minLength": 1,
                            "example": "recording1233.mp4"
                          },
                          "durationTime": {
                            "type": "number",
                            "example": 350
                          },
                          "domain": {
                            "type": "string",
                            "minLength": 1,
                            "example": "https://www.azure.com"
                          },
                          "filePath": {
                            "type": "string",
                            "minLength": 1,
                            "example": "/conference/recording2/"
                          },
                          "meetingId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "31365cf8-53a5-4042-9a45-2db3f4815f06"
                          },
                          "recStartTime": {
                            "type": "string",
                            "minLength": 1
                          },
                          "recordingId": {
                            "type": "number",
                            "example": 589
                          },
                          "recEndTime": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-12-12T15:25:00Z"
                          }
                        },
                        "required": [
                          "fileName",
                          "durationTime",
                          "domain",
                          "filePath",
                          "meetingId",
                          "recStartTime",
                          "recordingId"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "bookmarks": [
                            {
                              "bookmarkId": 591,
                              "meetingUserId": 579,
                              "description": "some description",
                              "title": "some titles",
                              "userId": "430810f6-a2bb-4eb4-a1ab-526629892e78",
                              "bookmarkTime": 30
                            }
                          ],
                          "fileName": "recording1233.mp4",
                          "durationTime": 350,
                          "domain": "https://www.azure.com",
                          "filePath": "/conference/recording2/",
                          "meetingId": "31365cf8-53a5-4042-9a45-2db3f4815f06",
                          "recStartTime": "string",
                          "recordingId": 589,
                          "recEndTime": "2020-12-12T15:25:00Z"
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-recording",
        "description": "Retrieve all the recordings by meeting id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ]
      },
      "post": {
        "summary": "Create meeting recording",
        "operationId": "post-meeting-id-recording",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "recordingId"
                      ],
                      "properties": {
                        "recordingId": {
                          "type": "number",
                          "example": 590
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "recordingId": 590
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a meeting recording",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "recStartTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-12-13T14:25:00Z"
                  },
                  "fileName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "recording567.mp4"
                  },
                  "domain": {
                    "type": "string",
                    "minLength": 1,
                    "example": "https://www.azure.com"
                  },
                  "filePath": {
                    "type": "string",
                    "minLength": 1,
                    "example": "/conference/recording/"
                  },
                  "meetingUserId": {
                    "type": "number",
                    "example": 583
                  }
                },
                "required": [
                  "recStartTime",
                  "fileName",
                  "domain",
                  "filePath",
                  "meetingUserId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "recStartTime": "2020-12-13T14:25:00Z",
                    "fileName": "recording567.mp4",
                    "domain": "https://www.azure.com",
                    "filePath": "/conference/recording/",
                    "meetingUserId": 583
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recording"
        ]
      }
    },
    "/meeting/{id}/recording/{recId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "041113d9-0796-4567-86b9-33b14ecd6764"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        },
        {
          "schema": {
            "type": "string",
            "example": "590"
          },
          "name": "recId",
          "in": "path",
          "required": true,
          "description": "Recording id"
        }
      ],
      "patch": {
        "summary": "Update meeting recording",
        "operationId": "patch-meeting-id-recording-recId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To update a meeting recording",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "recEndTime": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time",
                    "example": "2020-12-13T15:25:00Z"
                  },
                  "durationTime": {
                    "type": "number",
                    "example": 350
                  },
                  "fileName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "recording133.mp4"
                  },
                  "domain": {
                    "type": "string",
                    "minLength": 1,
                    "example": "https://www.azure.com"
                  },
                  "filePath": {
                    "type": "string",
                    "minLength": 1,
                    "example": "/conference/recording/"
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "recEndTime": "2020-12-13T15:25:00Z",
                    "durationTime": 350,
                    "fileName": "recording133.mp4",
                    "domain": "https://www.azure.com",
                    "filePath": "/conference/recording/"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recording"
        ]
      }
    },
    "/recording/{recId}/bookmark": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "590"
          },
          "name": "recId",
          "in": "path",
          "required": true,
          "description": "Recording id"
        }
      ],
      "get": {
        "summary": "Get all the bookmarks",
        "tags": [
          "Bookmark"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/Bookmark.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "bookmarkId": 591,
                          "meetingUserId": 579,
                          "description": "some description",
                          "title": "some titles",
                          "userId": "430810f6-a2bb-4eb4-a1ab-526629892e78",
                          "bookmarkTime": 30
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-recording-recId-bookmark",
        "description": "Retrieve all the bookmarks by recording id",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwOTUxMDQsImlhdCI6MTYwNjkyMjMwNH0.1YDMiaCXjH5UYxpE_RTJtQPb_eiteJY6Umy7JVOD5gpvwv0_d-bEdSPllqvU9H6eSCRGGk9VQbo5bsWVyu5wzw"
            },
            "in": "header",
            "name": "Authorization",
            "description": "bearer token",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create bookmark",
        "operationId": "post-recording-recId-bookmark",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "bookmarkId"
                      ],
                      "properties": {
                        "bookmarkId": {
                          "type": "number",
                          "example": 592
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "bookmarkId": 592
                      },
                      "status": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a bookmark",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "bookmarkTime": {
                    "type": "number",
                    "example": 120
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "example": "description"
                  },
                  "meetingUserId": {
                    "type": "number",
                    "example": 578
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "example": "some title"
                  }
                },
                "required": [
                  "bookmarkTime",
                  "description",
                  "meetingUserId",
                  "title"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "bookmarkTime": 120,
                    "description": "description",
                    "meetingUserId": 578,
                    "title": "some title"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Bookmark"
        ]
      }
    },
    "/meeting/recurring": {
      "post": {
        "summary": "Create recurring meeting",
        "operationId": "post-meeting-recurring",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "meetingId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "8d7ed548-919d-4410-9e96-fd9a513951ae"
                          },
                          "schStartTime": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time",
                            "example": "2020-12-15T10:30:00Z"
                          }
                        },
                        "required": [
                          "meetingId",
                          "schStartTime"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "meetingId": "8d7ed548-919d-4410-9e96-fd9a513951ae",
                          "schStartTime": "2020-12-15T10:30:00Z"
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorMessage": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Meeting name already present in the mentioned time"
                          },
                          "errorCode": {
                            "type": "string",
                            "minLength": 1,
                            "example": "101"
                          }
                        },
                        "required": [
                          "errorMessage",
                          "errorCode"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "error"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Meeting name already present in the mentioned time",
                          "errorCode": "101"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "End time should be greater than Start time",
                          "errorCode": "102"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (3)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Start date cannot be past date",
                          "errorCode": "103"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorMessage": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Access denied"
                          },
                          "errorCode": {
                            "type": "string",
                            "minLength": 1,
                            "example": "403"
                          }
                        },
                        "required": [
                          "errorMessage",
                          "errorCode"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Access denied",
                          "errorCode": "403"
                        }
                      ],
                      "status": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a recurring meeting",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwOTUxMDQsImlhdCI6MTYwNjkyMjMwNH0.1YDMiaCXjH5UYxpE_RTJtQPb_eiteJY6Umy7JVOD5gpvwv0_d-bEdSPllqvU9H6eSCRGGk9VQbo5bsWVyu5wzw"
            },
            "in": "header",
            "name": "Authorization",
            "description": "bearer token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "recurringTimings": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "schStartTime": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "example": "2020-12-16T11:30:00Z"
                        },
                        "schEndTime": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "example": "2020-12-16T12:30:00Z"
                        }
                      },
                      "required": [
                        "schStartTime",
                        "schEndTime"
                      ]
                    }
                  },
                  "meetingName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Sprint meeting"
                  },
                  "meetingDesc": {
                    "type": "string",
                    "minLength": 1,
                    "example": "This meeting is about sprint 1"
                  },
                  "isWaitRoomEnabled": {
                    "type": "boolean"
                  },
                  "allowAnonymousUsers": {
                    "type": "boolean"
                  },
                  "isScreenshareUsed": {
                    "type": "boolean"
                  },
                  "isRecordingUsed": {
                    "type": "boolean"
                  },
                  "isAudioUsed": {
                    "type": "boolean"
                  },
                  "allowUsersInWaitRoom": {
                    "type": "boolean"
                  },
                  "isVideoUsed": {
                    "type": "boolean"
                  },
                  "isAutoRecEnabled": {
                    "type": "boolean"
                  },
                  "showRecording": {
                    "type": "boolean"
                  },
                  "users": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "stealthMode": {
                          "type": "boolean"
                        },
                        "isOrganizer": {
                          "type": "boolean"
                        },
                        "userId": {
                          "type": "string",
                          "minLength": 1,
                          "example": "430810f6-a2bb-4eb4-a1ab-526629892e78"
                        }
                      },
                      "required": [
                        "stealthMode",
                        "isOrganizer",
                        "userId"
                      ]
                    }
                  },
                  "isInvitationNeed": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "recurringTimings",
                  "meetingName",
                  "meetingDesc",
                  "isWaitRoomEnabled",
                  "allowAnonymousUsers",
                  "isScreenshareUsed",
                  "isRecordingUsed",
                  "isAudioUsed",
                  "allowUsersInWaitRoom",
                  "isVideoUsed",
                  "isAutoRecEnabled",
                  "showRecording",
                  "users"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "recurringTimings": [
                      {
                        "schStartTime": "2020-12-16T11:30:00Z",
                        "schEndTime": "2020-12-16T12:30:00Z"
                      }
                    ],
                    "meetingName": "Sprint meeting",
                    "meetingDesc": "This meeting is about sprint 1",
                    "isWaitRoomEnabled": true,
                    "allowAnonymousUsers": true,
                    "isScreenshareUsed": true,
                    "isRecordingUsed": true,
                    "isAudioUsed": true,
                    "allowUsersInWaitRoom": true,
                    "isVideoUsed": true,
                    "isAutoRecEnabled": true,
                    "showRecording": true,
                    "users": [
                      {
                        "stealthMode": true,
                        "isOrganizer": true,
                        "userId": "430810f6-a2bb-4eb4-a1ab-526629892e78"
                      }
                    ],
                    "isInvitationNeed": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "RecurringMeeting"
        ]
      }
    },
    "/meeting/{id}/quiz": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "762a8ef3-4cfd-4c71-9222-3a5849778008"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the quiz",
        "tags": [
          "Quiz"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/Quiz.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "quizQuestion": "sample quiz question ?",
                          "createdDate": "2020-12-18T08:52:39Z",
                          "quizId": 642,
                          "meetingUserId": 606,
                          "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                          "quizOptions": [
                            {
                              "optionDesc": "option-a",
                              "quizOptionId": 622,
                              "isCorrectOption": true
                            }
                          ],
                          "updatedDate": null,
                          "answerdBy": [
                            {
                              "quizOptionId": 643,
                              "meetingUserId": 608
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-quiz",
        "description": "Retrive all the quiz by meeting id"
      },
      "post": {
        "summary": "Create quiz",
        "operationId": "post-meeting-id-quiz",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Quiz.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "quizQuestion": "sample quiz question ?",
                        "createdDate": "2020-12-18T08:52:39Z",
                        "quizId": 642,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "quizOptions": [
                          {
                            "optionDesc": "option-a",
                            "quizOptionId": 622,
                            "isCorrectOption": true
                          }
                        ],
                        "updatedDate": null,
                        "answerdBy": [
                          {
                            "quizOptionId": 643,
                            "meetingUserId": 608
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a quiz",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "quizQuestion": {
                    "type": "string",
                    "minLength": 1,
                    "example": "sample quiz question 2?"
                  },
                  "meetingUserId": {
                    "type": "number",
                    "example": 606
                  },
                  "quizOptions": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "optionDesc": {
                          "type": "string",
                          "minLength": 1,
                          "example": "option-1"
                        },
                        "isCorrectOption": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "optionDesc",
                        "isCorrectOption"
                      ]
                    }
                  }
                },
                "required": [
                  "quizQuestion",
                  "meetingUserId",
                  "quizOptions"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "quizQuestion": "sample quiz question 2?",
                    "meetingUserId": 606,
                    "quizOptions": [
                      {
                        "optionDesc": "option-1",
                        "isCorrectOption": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Quiz"
        ]
      }
    },
    "/meeting/{id}/quiz/{quizId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "762a8ef3-4cfd-4c71-9222-3a5849778008"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        },
        {
          "schema": {
            "type": "string",
            "example": "623"
          },
          "name": "quizId",
          "in": "path",
          "required": true,
          "description": "Quiz id "
        }
      ],
      "get": {
        "summary": "Get the quiz by id",
        "tags": [
          "Quiz"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Quiz.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "quizQuestion": "sample quiz question ?",
                        "createdDate": "2020-12-18T08:52:39Z",
                        "quizId": 642,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "quizOptions": [
                          {
                            "optionDesc": "option-a",
                            "quizOptionId": 622,
                            "isCorrectOption": true
                          }
                        ],
                        "updatedDate": null,
                        "answerdBy": [
                          {
                            "quizOptionId": 643,
                            "meetingUserId": 608
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-quiz-quizId",
        "description": "Retrieve quiz by quiz id"
      },
      "delete": {
        "summary": "Delete the quiz by id",
        "operationId": "delete-meeting-id-quiz-quizId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Deleted successfully",
                        "status": "success"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete the quiz by id",
        "tags": [
          "Quiz"
        ]
      },
      "patch": {
        "summary": "Update the quiz by id",
        "operationId": "patch-meeting-id-quiz-quizId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update the quiz by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "quizQuestion": {
                    "type": "string",
                    "minLength": 1,
                    "example": "update quiz question ?"
                  },
                  "quizOptions": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "$ref": "../model/common/QuizOptions.v1.json"
                    }
                  },
                  "isArchived": {
                    "type": "boolean"
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "quizQuestion": "How to update a quiz question ?",
                    "quizOptions": [
                      {
                        "optionDesc": "option-a",
                        "quizOptionId": 622,
                        "isCorrectOption": true
                      }
                    ],
                    "isArchived": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Quiz"
        ]
      }
    },
    "/meeting/{id}/poll": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "762a8ef3-4cfd-4c71-9222-3a5849778008"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meetin id"
        }
      ],
      "get": {
        "summary": "Get all the polls",
        "tags": [
          "Poll"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/Poll.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "createdDate": "2020-12-17T06:33:48Z",
                          "pollId": 611,
                          "meetingUserId": 606,
                          "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                          "updatedDate": null,
                          "pollQuestion": "sample poll question ?",
                          "pollOptions": [
                            {
                              "optionDesc": "option-1",
                              "pollOptionId": 615
                            }
                          ],
                          "answerdBy": [
                            {
                              "meetingUserId": 608,
                              "pollOptionId": 612
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-poll",
        "description": "Retrieve all the polls"
      },
      "post": {
        "summary": "Create a poll",
        "operationId": "post-meeting-id-poll",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Poll.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "createdDate": "2020-12-17T06:33:48Z",
                        "pollId": 611,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "updatedDate": null,
                        "pollQuestion": "sample poll question ?",
                        "pollOptions": [
                          {
                            "optionDesc": "option-1",
                            "pollOptionId": 615
                          }
                        ],
                        "answerdBy": [
                          {
                            "meetingUserId": 608,
                            "pollOptionId": 612
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a poll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "pollQuestion": {
                    "type": "string",
                    "minLength": 1,
                    "example": "sample poll question 3?"
                  },
                  "meetingUserId": {
                    "type": "number",
                    "example": 606
                  },
                  "pollOptions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "option-a"
                    }
                  }
                },
                "required": [
                  "pollQuestion",
                  "meetingUserId",
                  "pollOptions"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "pollQuestion": "sample poll question 3?",
                    "meetingUserId": 606,
                    "pollOptions": [
                      "option-a"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Poll"
        ]
      }
    },
    "/meeting/{id}/poll/{pollId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "762a8ef3-4cfd-4c71-9222-3a5849778008"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id "
        },
        {
          "schema": {
            "type": "string",
            "example": "620"
          },
          "name": "pollId",
          "in": "path",
          "required": true,
          "description": "Poll id"
        }
      ],
      "get": {
        "summary": "Get the poll by id",
        "tags": [
          "Poll"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Poll.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "createdDate": "2020-12-17T06:33:48Z",
                        "pollId": 611,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "updatedDate": null,
                        "pollQuestion": "sample poll question ?",
                        "pollOptions": [
                          {
                            "optionDesc": "option-1",
                            "pollOptionId": 615
                          }
                        ],
                        "answerdBy": [
                          {
                            "meetingUserId": 608,
                            "pollOptionId": 612
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-poll-pollId",
        "description": "Get poll by poll id"
      },
      "delete": {
        "summary": "Delete the poll by id",
        "operationId": "delete-meeting-id-poll-pollId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Deleted successfully",
                        "status": "success"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete the poll by id",
        "tags": [
          "Poll"
        ]
      },
      "patch": {
        "summary": "Update the poll by id",
        "operationId": "patch-meeting-id-poll-pollId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update the poll by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "pollQuestion": {
                    "type": "string",
                    "minLength": 1,
                    "example": "How to update a poll question?"
                  },
                  "pollOptions": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "$ref": "../model/common/PollOptions.v1.json"
                    }
                  },
                  "isArchived": {
                    "type": "boolean"
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "pollQuestion": "How to update a poll question?",
                    "pollOptions": [
                      {
                        "optionDesc": "option-1",
                        "pollOptionId": 615
                      }
                    ],
                    "isArchived": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Poll"
        ]
      }
    },
    "/quiz/{quizId}/answer": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "quizId",
          "in": "path",
          "required": true,
          "description": "Quiz id"
        }
      ],
      "post": {
        "summary": "Create quiz answer",
        "operationId": "post-quiz-quizId-answer",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Quiz.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "quizQuestion": "sample quiz question ?",
                        "createdDate": "2020-12-18T08:52:39Z",
                        "quizId": 642,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "quizOptions": [
                          {
                            "optionDesc": "option-a",
                            "quizOptionId": 622,
                            "isCorrectOption": true
                          }
                        ],
                        "updatedDate": null,
                        "answerdBy": [
                          {
                            "quizOptionId": 643,
                            "meetingUserId": 608
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a quiz answer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "meetingUserId": {
                    "type": "number",
                    "example": 610
                  },
                  "quizOptionId": {
                    "type": "number",
                    "example": 638
                  }
                },
                "required": [
                  "meetingUserId",
                  "quizOptionId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "meetingUserId": 610,
                    "quizOptionId": 643
                  }
                }
              }
            }
          }
        },
        "tags": [
          "QuizAnswer"
        ]
      }
    },
    "/poll/{pollId}/answer": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "pollId",
          "in": "path",
          "required": true,
          "description": "Poll id"
        }
      ],
      "post": {
        "summary": "Create poll answer",
        "operationId": "post-poll-pollId-answer",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Poll.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "createdDate": "2020-12-17T06:33:48Z",
                        "pollId": 611,
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "updatedDate": null,
                        "pollQuestion": "sample poll question ?",
                        "pollOptions": [
                          {
                            "optionDesc": "option-1",
                            "pollOptionId": 615
                          }
                        ],
                        "answerdBy": [
                          {
                            "meetingUserId": 608,
                            "pollOptionId": 612
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a poll answer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "meetingUserId": {
                    "type": "number",
                    "example": 610
                  },
                  "pollOptionId": {
                    "type": "number",
                    "example": 638
                  }
                },
                "required": [
                  "meetingUserId",
                  "pollOptionId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "meetingUserId": 608,
                    "pollOptionId": 636
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PollAnswer"
        ]
      }
    },
    "/meeting/{id}/file": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "762a8ef3-4cfd-4c71-9222-3a5849778008"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the files",
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/File-details.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "fileName": "sample.pdf",
                          "fileSize": 1922169,
                          "filePath": "/files/762a8ef3-4cfd-4c71-9222-3a5849778008/sample_1608304535363.pdf",
                          "meetingUserId": 606,
                          "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                          "message": "some message",
                          "fileType": "pdf",
                          "fileId": 649
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-file",
        "description": "Retrice all the files by meeting id"
      },
      "post": {
        "summary": "Upload file",
        "operationId": "post-meeting-id-file",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/File-details.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "fileName": "sample.pdf",
                        "fileSize": 1922169,
                        "filePath": "/files/762a8ef3-4cfd-4c71-9222-3a5849778008/sample_1608304535363.pdf",
                        "meetingUserId": 606,
                        "meetingId": "762a8ef3-4cfd-4c71-9222-3a5849778008",
                        "message": "some message",
                        "fileType": "pdf",
                        "fileId": 649
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To upload a file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "meetingUserId"
                    ],
                    "properties": {
                      "meetingUserId": {
                        "type": "number",
                        "example": 606
                      },
                      "message": {
                        "type": "string",
                        "minLength": 1,
                        "example": "some message"
                      }
                    }
                  },
                  "file": {
                    "type": "string",
                    "minLength": 1,
                    "example": "file upload"
                  }
                },
                "required": [
                  "data",
                  "file"
                ]
              },
              "examples": {
                "multipart/form-data": {
                  "value": {
                    "data": {
                      "meetingUserId": 606,
                      "message": "some message"
                    },
                    "file": "file upload"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/meeting/{id}/message": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the messages",
        "tags": [
          "Messages"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "../model/common/Message.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "createdDate": "2020-12-26T06:21:01Z",
                          "messageType": {
                            "typeName": "MESSAGE_GROUP",
                            "typeId": 1
                          },
                          "fromUserId": 606,
                          "messageId": 957,
                          "meetingId": "a1c88018-4b28-45b0-aa66-dc3886442530",
                          "id": null,
                          "message": "Hello😊",
                          "toUserId": null
                        }
                      ],
                      "status": "success"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "createdDate": "2020-12-26T06:21:01Z",
                          "messageType": {
                            "typeName": "MESSAGE_GROUP",
                            "typeId": 1
                          },
                          "fromUserId": 606,
                          "messageId": 957,
                          "meetingId": "a1c88018-4b28-45b0-aa66-dc3886442530",
                          "id": "a34f3r53fe",
                          "message": "Hello😊",
                          "toUserId": 610
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-message",
        "description": "Retrieve all the messages by meeting id"
      },
      "post": {
        "summary": "Save message",
        "operationId": "post-meeting-id-message",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Message.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": {
                        "createdDate": "2020-12-26T06:21:01Z",
                        "messageType": {
                          "typeName": "MESSAGE_GROUP",
                          "typeId": 1
                        },
                        "fromUserId": 606,
                        "messageId": 957,
                        "meetingId": "a1c88018-4b28-45b0-aa66-dc3886442530",
                        "id": null,
                        "message": "Hello😊",
                        "toUserId": null
                      },
                      "status": "success"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": {
                        "createdDate": "2020-12-26T06:21:01Z",
                        "messageType": {
                          "typeName": "MESSAGE_GROUP",
                          "typeId": 1
                        },
                        "fromUserId": 606,
                        "messageId": 957,
                        "meetingId": "a1c88018-4b28-45b0-aa66-dc3886442530",
                        "id": "aefer3434",
                        "message": "Hello😊",
                        "toUserId": 610
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To save the message details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "minLength": 1,
                    "example": "some message"
                  },
                  "typeId": {
                    "type": "number",
                    "example": 1
                  },
                  "fromUserId": {
                    "type": "number",
                    "example": 606
                  },
                  "toUserId": {
                    "type": "number"
                  },
                  "id": {
                    "type": "string",
                    "example": "a3f244nf92"
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-12-26T05:51:50Z"
                  }
                },
                "required": [
                  "message",
                  "typeId",
                  "fromUserId"
                ]
              },
              "examples": {
                "application/json (1)": {
                  "value": {
                    "message": "some message",
                    "typeId": 1,
                    "fromUserId": 606
                  }
                },
                "application/json (2)": {
                  "value": {
                    "message": "some message",
                    "typeId": 1,
                    "fromUserId": 606,
                    "toUserId": 610
                  }
                },
                "application/json (3)": {
                  "value": {
                    "message": "some message",
                    "typeId": 1,
                    "fromUserId": 606,
                    "toUserId": 610,
                    "id": "a3f244nf92",
                    "createdDate": "2020-12-26T05:51:50Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Messages"
        ]
      }
    },
    "/meetingLogs": {
      "get": {
        "summary": "Get all the users meeting logs",
        "tags": [
          "MeetingLogs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "totalRecords": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "totalRecords",
                        "limit",
                        "page"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "emailId",
                          "userName",
                          "userId"
                        ],
                        "properties": {
                          "role": {
                            "type": "object",
                            "properties": {
                              "roleId": {
                                "type": "number"
                              },
                              "roleName": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "roleId",
                              "roleName"
                            ]
                          },
                          "emailId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "meetings": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "required": [
                                "meetingName",
                                "meetingUserId",
                                "meetingId"
                              ],
                              "properties": {
                                "meetingName": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "meetingUserId": {
                                  "type": "number"
                                },
                                "meetingId": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "statusId": {
                                      "type": "number"
                                    },
                                    "statusName": {
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "required": [
                                    "statusId",
                                    "statusName"
                                  ]
                                },
                                "statistics": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "required": [
                                      "exitTime",
                                      "joinTime"
                                    ],
                                    "properties": {
                                      "exitTime": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "joinTime": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "userName": {
                            "type": "string",
                            "minLength": 1
                          },
                          "userId": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "pagination",
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "pagination": {
                        "totalRecords": 10,
                        "limit": 5,
                        "page": 1
                      },
                      "data": [
                        {
                          "role": {
                            "roleId": 2,
                            "roleName": "BE admin"
                          },
                          "emailId": "hugh.j@tra-augment.com",
                          "meetings": [
                            {
                              "meetingName": "Sprint meeting",
                              "meetingUserId": 2643,
                              "meetingId": "a1c88018-4b28-45b0-aa66-dc3886442530",
                              "status": {
                                "statusId": 3,
                                "statusName": "Completed"
                              },
                              "statistics": [
                                {
                                  "exitTime": "2020-12-26T08:35:30Z",
                                  "joinTime": "2020-12-26T08:35:15Z"
                                }
                              ]
                            }
                          ],
                          "userName": "Hugh Jackman",
                          "userId": "6a2097f6-4d1b-4a44-a232-fb73db138ee9"
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meetingLogs",
        "description": "To retrive the list of users meeting logs",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "example": "rajeshkumar"
            },
            "description": "Be user id",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "1"
            },
            "in": "query",
            "name": "page",
            "description": "Filter the data by the given page no"
          },
          {
            "schema": {
              "type": "string",
              "example": "5"
            },
            "in": "query",
            "name": "size",
            "description": "Limit the size of the data"
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-07"
            },
            "in": "query",
            "name": "from",
            "description": "Filter the data by the start date"
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-10"
            },
            "in": "query",
            "name": "to",
            "description": "Filter the data by the end date"
          },
          {
            "schema": {
              "type": "string",
              "example": "hughjackman,christianbale"
            },
            "in": "query",
            "name": "userId",
            "description": "Filter the data by the user ids"
          }
        ]
      }
    },
    "/meeting/{id}/room": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "07735a16-313d-493a-811e-2a732c8bdf5s"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        }
      ],
      "get": {
        "summary": "Get all the breakout rooms",
        "tags": [
          "BreakoutRoom"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "../model/common/BreakoutRooms.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "breakoutRoomId": 2567,
                          "countdownTimerStartsAt": 60,
                          "createdBy": {
                            "userName": "Dinesh Kumar",
                            "userId": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0b"
                          },
                          "closeAfter": 600,
                          "canReturnToMainSession": true,
                          "meeting": {
                            "allowAnonymousUsers": true,
                            "meetingId": "85571e49-aa3e-4a0f-aa95-15b87793d01b",
                            "schEndTime": "2020-11-04T11:30:00Z",
                            "showRecording": true,
                            "schStartTime": "2020-11-04T10:30:00Z",
                            "isAutoRecEnabled": true,
                            "businessEntity": {
                              "businessEnitytId": 1,
                              "businessEnityName": "Focus",
                              "logo": "/business/focus.jpg"
                            },
                            "meetingUrl": "https://video.3edge.in:5000/a2f987292",
                            "isScreenshareUsed": true,
                            "meetingTimings": [
                              {
                                "actStartTime": "2020-10-28T15:20:00Z",
                                "actEndTime": "2020-10-28T16:15:00Z"
                              }
                            ],
                            "isWaitRoomEnabled": true,
                            "meetingName": "Sprint Meeting",
                            "waitRoomId": "025c44b020a",
                            "isRecordingUsed": true,
                            "isAudioUsed": true,
                            "meetingDesc": "This meeting is about sprint 2",
                            "isVideoUsed": true,
                            "allowUsersInWaitRoom": true,
                            "status": {
                              "statusId": 1,
                              "statusName": "Scheduled"
                            }
                          },
                          "users": [
                            {
                              "meetingUserId": 2569,
                              "userName": "Hugh Jackman",
                              "mainSessionMeetingUserId": 2560
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-room",
        "description": "To retrieve all the breakout rooms by meeting id"
      },
      "post": {
        "summary": "Create breakout rooms",
        "operationId": "post-meeting-id-room",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "../model/common/BreakoutRooms.v1.json"
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "breakoutRoomId": 2567,
                          "countdownTimerStartsAt": 60,
                          "createdBy": {
                            "userName": "Dinesh Kumar",
                            "userId": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0b"
                          },
                          "closeAfter": 600,
                          "canReturnToMainSession": true,
                          "meeting": {
                            "allowAnonymousUsers": true,
                            "meetingId": "85571e49-aa3e-4a0f-aa95-15b87793d01b",
                            "schEndTime": "2020-11-04T11:30:00Z",
                            "showRecording": true,
                            "schStartTime": "2020-11-04T10:30:00Z",
                            "isAutoRecEnabled": true,
                            "businessEntity": {
                              "businessEnitytId": 1,
                              "businessEnityName": "Focus",
                              "logo": "/business/focus.jpg"
                            },
                            "meetingUrl": "https://video.3edge.in:5000/a2f987292",
                            "isScreenshareUsed": true,
                            "meetingTimings": [
                              {
                                "actStartTime": "2020-10-28T15:20:00Z",
                                "actEndTime": "2020-10-28T16:15:00Z"
                              }
                            ],
                            "isWaitRoomEnabled": true,
                            "meetingName": "Sprint Meeting",
                            "waitRoomId": "025c44b020a",
                            "isRecordingUsed": true,
                            "isAudioUsed": true,
                            "meetingDesc": "This meeting is about sprint 2",
                            "isVideoUsed": true,
                            "allowUsersInWaitRoom": true,
                            "status": {
                              "statusId": 1,
                              "statusName": "Scheduled"
                            }
                          },
                          "users": [
                            {
                              "meetingUserId": 2569,
                              "userName": "Hugh Jackman",
                              "mainSessionMeetingUserId": 2560
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "A breakout room with the same name already exist",
                          "errorCode": "120"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create breakout rooms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "meetingUserId": {
                    "type": "number",
                    "example": 1492
                  },
                  "breakoutRooms": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "breakoutRoomName": {
                          "type": "string",
                          "minLength": 1,
                          "example": "room-1"
                        },
                        "canReturnToMainSession": {
                          "type": "boolean"
                        },
                        "countdownTimerStartsAt": {
                          "type": "number",
                          "example": 60
                        },
                        "closeAfter": {
                          "type": "number",
                          "example": 600
                        },
                        "userIds": {
                          "type": "array",
                          "items": {
                            "type": "number",
                            "example": 1605
                          }
                        }
                      },
                      "required": [
                        "breakoutRoomName",
                        "canReturnToMainSession",
                        "countdownTimerStartsAt",
                        "closeAfter"
                      ]
                    }
                  }
                },
                "required": [
                  "meetingUserId",
                  "breakoutRooms"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "meetingUserId": 1492,
                    "breakoutRooms": [
                      {
                        "breakoutRoomName": "room-1",
                        "canReturnToMainSession": true,
                        "countdownTimerStartsAt": 60,
                        "closeAfter": 600,
                        "userIds": [
                          1605
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "BreakoutRoom"
        ]
      }
    },
    "/meeting/{id}/room/{roomId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        },
        {
          "schema": {
            "type": "number"
          },
          "name": "roomId",
          "in": "path",
          "required": true,
          "description": "breakout room id"
        }
      ],
      "get": {
        "summary": "Get the breakout room by id",
        "tags": [
          "BreakoutRoom"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/BreakoutRooms.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "breakoutRoomId": 2567,
                        "countdownTimerStartsAt": 60,
                        "createdBy": {
                          "userName": "Dinesh Kumar",
                          "userId": "736d4d98-5bd9-4e47-8fb9-fa5fa0754f0b"
                        },
                        "closeAfter": 600,
                        "canReturnToMainSession": true,
                        "meeting": {
                          "allowAnonymousUsers": true,
                          "meetingId": "85571e49-aa3e-4a0f-aa95-15b87793d01b",
                          "schEndTime": "2020-11-04T11:30:00Z",
                          "showRecording": true,
                          "schStartTime": "2020-11-04T10:30:00Z",
                          "isAutoRecEnabled": true,
                          "businessEntity": {
                            "businessEnitytId": 1,
                            "businessEnityName": "Focus",
                            "logo": "/business/focus.jpg"
                          },
                          "meetingUrl": "https://video.3edge.in:5000/a2f987292",
                          "isScreenshareUsed": true,
                          "meetingTimings": [
                            {
                              "actStartTime": "2020-10-28T15:20:00Z",
                              "actEndTime": "2020-10-28T16:15:00Z"
                            }
                          ],
                          "isWaitRoomEnabled": true,
                          "meetingName": "Sprint Meeting",
                          "waitRoomId": "025c44b020a",
                          "isRecordingUsed": true,
                          "isAudioUsed": true,
                          "meetingDesc": "This meeting is about sprint 2",
                          "isVideoUsed": true,
                          "allowUsersInWaitRoom": true,
                          "status": {
                            "statusId": 1,
                            "statusName": "Scheduled"
                          }
                        },
                        "users": [
                          {
                            "meetingUserId": 2569,
                            "userName": "Hugh Jackman",
                            "mainSessionMeetingUserId": 2560
                          }
                        ]
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "No Records",
                          "errorCode": "105"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-room-roomId",
        "description": "To retrieve the breakout room by id"
      },
      "patch": {
        "summary": "Update the breakout room by id",
        "operationId": "patch-meeting-id-room-roomId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Updated successfully"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "No Records",
                          "errorCode": "105"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To update the breakout room by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "breakoutRoomName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "update room -1"
                  },
                  "canReturnToMainSession": {
                    "type": "boolean"
                  },
                  "countdownTimerStartsAt": {
                    "type": "number",
                    "example": 70
                  },
                  "closeAfter": {
                    "type": "number",
                    "example": 700
                  }
                }
              },
              "examples": {
                "application/json": {
                  "value": {
                    "breakoutRoomName": "update room -1",
                    "canReturnToMainSession": true,
                    "countdownTimerStartsAt": 70,
                    "closeAfter": 700
                  }
                }
              }
            }
          }
        },
        "tags": [
          "BreakoutRoom"
        ]
      },
      "delete": {
        "summary": "Delete the breakout room by id",
        "operationId": "delete-meeting-id-room-roomId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "message": "Deleted successfully",
                        "status": "success"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To delete the breakout room by id",
        "tags": [
          "BreakoutRoom"
        ]
      }
    },
    "/meeting/anonymous-user": {
      "get": {
        "summary": "Get anonymous user",
        "tags": [
          "AnonymousUser"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Anonymous-user.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "anonymousId": 1675,
                        "createdDate": "2021-01-08T12:02:47Z",
                        "emailId": "dk@gmail.com",
                        "userName": "Dineshkumar B",
                        "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwOGQ5ZDIzMjUiLCJleHAiOjE2MTAxMDk2NDcsInVzZXJJZCI6IjZkMjBmMjQzLTk0N2MtNDRiNC1iYzI3LWIyOWNmMWVkZjgwZSIsImlhdCI6MTYxMDEwODc0N30.cgtNfOgYtCtn1WxOMdM_V0bEaWi1aF40U6jLL-fR9Ys69gem8BsA14I38lWZ5xpcCiCRk3cEH6j-a8UYUovi4Q"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-anonymous-user",
        "description": "To retrive the anonymous user",
        "parameters": [
          {
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxOTQyOGIwNS00ZGE1LTQ1ZTItYjNhZS05MTAyMjA4NGMyMzQiLCJleHAiOjE2MDcwOTUxMDQsImlhdCI6MTYwNjkyMjMwNH0.1YDMiaCXjH5UYxpE_RTJtQPb_eiteJY6Umy7JVOD5gpvwv0_d-bEdSPllqvU9H6eSCRGGk9VQbo5bsWVyu5wzw"
            },
            "name": "Authorization",
            "description": "Bearer token ",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create anonymous user",
        "operationId": "post-meeting-anonymous-user",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "../model/common/Anonymous-user.v1.json"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "anonymousId": 1675,
                        "createdDate": "2021-01-08T12:02:47Z",
                        "emailId": "dk@gmail.com",
                        "userName": "Dineshkumar B",
                        "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwOGQ5ZDIzMjUiLCJleHAiOjE2MTAxMDk2NDcsInVzZXJJZCI6IjZkMjBmMjQzLTk0N2MtNDRiNC1iYzI3LWIyOWNmMWVkZjgwZSIsImlhdCI6MTYxMDEwODc0N30.cgtNfOgYtCtn1WxOMdM_V0bEaWi1aF40U6jLL-fR9Ys69gem8BsA14I38lWZ5xpcCiCRk3cEH6j-a8UYUovi4Q"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create an anonymous user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "emailId": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "firstName",
                  "lastName"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "firstName": "Dineshkumar",
                    "lastName": "B",
                    "emailId": "dk@gmail.com"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AnonymousUser"
        ]
      }
    },
    "/meeting/{id}/file/{fileId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "93635e95-e974-4567-bfec-4fbbad8a1b93"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Meeting id"
        },
        {
          "schema": {
            "type": "number",
            "example": 164649
          },
          "name": "fileId",
          "in": "path",
          "required": true,
          "description": "File id"
        }
      ],
      "get": {
        "summary": "Get the file by id",
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "No Records",
                          "errorCode": "105"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "The session does not exist!",
                          "errorCode": "119"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Unable to get the JWT Token",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-id-file-fileId",
        "description": "Retrieve the file by id",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2ZDIwZjI0My05NDdjLTQ0YjQtYmMyNy1iMjljZjFlZGY4MGUiLCJleHAiOjE2MDkzMjg3NzIsImlhdCI6MTYwOTE1NTk3Mn0.syoc5DEIIw2daQC11MqLjbiqq5NNE2_N5-mgr9A-xiZLq9pjhDXlkQ69LBGe_7MIH9CaQu1JgJYlUyypqpMEbg"
            },
            "in": "query",
            "name": "token",
            "description": "This token can be generated using the create user session API",
            "required": true
          }
        ]
      }
    },
    "/meeting/participants/statistics": {
      "get": {
        "summary": "Get participants statistics",
        "tags": [
          "Statistics"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "meetingUserId": {
                            "type": "number",
                            "example": 114499
                          },
                          "meetingId": {
                            "type": "string",
                            "minLength": 1,
                            "example": "93635e95-e974-4567-bfec-4fbbad8a1b93"
                          },
                          "userName": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Christoper Nolan"
                          },
                          "statistics": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "exitTime": {
                                  "type": "string",
                                  "minLength": 1,
                                  "format": "date-time",
                                  "example": "2021-01-18T14:45:00Z"
                                },
                                "joinTime": {
                                  "type": "string",
                                  "minLength": 1,
                                  "format": "date-time",
                                  "example": "2021-01-18T14:30:00Z"
                                },
                                "users": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "timeSpent": {
                                        "type": "number",
                                        "example": 900
                                      },
                                      "meetingUserId": {
                                        "type": "number",
                                        "example": 115416
                                      },
                                      "userName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "example": "Dinesh Kumar"
                                      }
                                    },
                                    "required": [
                                      "timeSpent",
                                      "meetingUserId",
                                      "userName"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "exitTime",
                                "joinTime"
                              ]
                            }
                          }
                        },
                        "required": [
                          "meetingUserId",
                          "meetingId",
                          "userName"
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1,
                      "example": "success"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "meetingUserId": 114499,
                          "meetingId": "93635e95-e974-4567-bfec-4fbbad8a1b93",
                          "userName": "Christoper Nolan",
                          "statistics": [
                            {
                              "exitTime": "2021-01-18T14:45:00Z",
                              "joinTime": "2021-01-18T14:30:00Z",
                              "users": [
                                {
                                  "timeSpent": 900,
                                  "meetingUserId": 115416,
                                  "userName": "Dinesh Kumar"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Required query param is missing",
                          "errorCode": "121"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meeting-participants-statistics",
        "description": "Retrieve the given participants statistics",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "1234,64446,46646"
            },
            "in": "query",
            "required": true,
            "name": "muIds",
            "description": "Meeting user ids"
          }
        ]
      }
    },
    "/user/create": {
      "post": {
        "summary": "Create user",
        "operationId": "post-user-create",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "userId"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": {
                        "userId": "e96b3jv39y9y4g34v3v4343b"
                      },
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json (1)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "The Role does not exist!",
                          "errorCode": "122"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (2)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "The Role does not exist!",
                          "errorCode": "123"
                        }
                      ],
                      "status": "error"
                    }
                  },
                  "application/json (3)": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Record Saved Failed",
                          "errorCode": "111"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Access Denied",
                          "errorCode": "403"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "To create a new user in the business entity",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "dinesh"
                  },
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Dinesh"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Kumar"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "example": "dinesh.b@gmail.com"
                  },
                  "roleId": {
                    "type": "number",
                    "example": 3
                  }
                },
                "required": [
                  "userName",
                  "firstName",
                  "lastName",
                  "email",
                  "roleId"
                ]
              },
              "examples": {
                "application/json": {
                  "value": {
                    "userName": "dinesh",
                    "firstName": "Dinesh",
                    "lastName": "Kumar",
                    "email": "dinesh.b@gmail.com",
                    "roleId": 3
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/entity/meetingLogs": {
      "get": {
        "summary": "Get all meeting logs",
        "tags": [
          "MeetingLogs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "totalRecords": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "totalRecords",
                        "limit",
                        "page"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "emailId",
                          "userName",
                          "userId"
                        ],
                        "properties": {
                          "role": {
                            "type": "object",
                            "properties": {
                              "roleId": {
                                "type": "number"
                              },
                              "roleName": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "roleId",
                              "roleName"
                            ]
                          },
                          "emailId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "meetings": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "required": [
                                "meetingName",
                                "meetingUserId",
                                "meetingId"
                              ],
                              "properties": {
                                "meetingName": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "meetingUserId": {
                                  "type": "number"
                                },
                                "meetingId": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "statusId": {
                                      "type": "number"
                                    },
                                    "statusName": {
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "required": [
                                    "statusId",
                                    "statusName"
                                  ]
                                },
                                "statistics": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "minItems": 1,
                                  "items": {
                                    "required": [
                                      "exitTime",
                                      "joinTime"
                                    ],
                                    "properties": {
                                      "exitTime": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "joinTime": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "users": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "minItems": 1,
                                        "items": {
                                          "required": [
                                            "timeSpent",
                                            "meetingUserId",
                                            "userName"
                                          ],
                                          "properties": {
                                            "timeSpent": {
                                              "type": "number"
                                            },
                                            "meetingUserId": {
                                              "type": "number"
                                            },
                                            "userName": {
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "userName": {
                            "type": "string",
                            "minLength": 1
                          },
                          "userId": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "pagination",
                    "data",
                    "status"
                  ]
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "pagination": {
                        "totalRecords": 10,
                        "limit": 5,
                        "page": 1
                      },
                      "data": [
                        {
                          "role": {
                            "roleId": 2,
                            "roleName": "BE admin"
                          },
                          "emailId": "hugh.j@tra-augment.com",
                          "meetings": [
                            {
                              "meetingName": "Test meeting",
                              "meetingUserId": 2643,
                              "meetingId": "93635e95-e974-4567-bfec-4fbbad8a1b93",
                              "status": {
                                "statusId": 3,
                                "statusName": "Completed"
                              },
                              "statistics": [
                                {
                                  "exitTime": "2020-12-26T08:35:30Z",
                                  "joinTime": "2020-12-26T08:35:15Z",
                                  "users": [
                                    {
                                      "timeSpent": 900,
                                      "meetingUserId": 115416,
                                      "userName": "Dinesh Kumar"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "userName": "Hugh Jackman",
                          "userId": "6a2097f6-4d1b-4a44-a232-fb73db138ee9"
                        }
                      ],
                      "status": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-response"
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "data": [
                        {
                          "errorMessage": "Invalid Credential!",
                          "errorCode": "401"
                        }
                      ],
                      "status": "error"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-entity-meetingLogs",
        "description": "Retrieve the list of users meeting logs in a business entity",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "rajeshkumar"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Be user id",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-07"
            },
            "in": "query",
            "name": "from",
            "description": "Filter the data by the start date"
          },
          {
            "schema": {
              "type": "string",
              "example": "1"
            },
            "in": "query",
            "name": "page",
            "description": "Filter the data by the given page no"
          },
          {
            "schema": {
              "type": "string",
              "example": "5"
            },
            "in": "query",
            "name": "size",
            "description": "Limit the size of the data"
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-10"
            },
            "in": "query",
            "name": "to",
            "description": "Filter the data by the end date"
          },
          {
            "schema": {
              "type": "string",
              "example": "hughjackman,christianbale"
            },
            "in": "query",
            "name": "userId",
            "description": "Filter the data by the user ids"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Update-response": {
        "title": "Update-response",
        "type": "object",
        "description": "",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Updated successfully"
              }
            }
          },
          "status": {
            "type": "string",
            "example": "success"
          }
        },
        "x-examples": {
          "application/json": {
            "data": {
              "message": "Updated successfully"
            },
            "status": "success"
          }
        }
      },
      "Delete-response": {
        "title": "Delete-response",
        "type": "object",
        "description": "",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Deleted successfully"
              },
              "status": {
                "type": "string",
                "example": "success"
              }
            }
          }
        },
        "x-examples": {
          "application/json": {
            "data": {
              "message": "Deleted successfully",
              "status": "success"
            }
          }
        }
      },
      "Error-response": {
        "description": "",
        "type": "object",
        "x-examples": {
          "application/json": {
            "data": [
              {
                "errorMessage": "Invalid Credential!",
                "errorCode": "401"
              }
            ],
            "status": "error"
          }
        },
        "properties": {
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "type": "string",
                  "minLength": 1,
                  "example": "Invalid Credential!"
                },
                "errorCode": {
                  "type": "string",
                  "minLength": 1,
                  "example": "401"
                }
              },
              "required": [
                "errorMessage",
                "errorCode"
              ]
            }
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "example": "error"
          }
        },
        "required": [
          "data",
          "status"
        ]
      }
    },
    "securitySchemes": {},
    "parameters": {
      "authorization": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2ZDIwZjI0My05NDdjLTQ0YjQtYmMyNy1iMjljZjFlZGY4MGUiLCJleHAiOjE2MDkzMjg3NzIsImlhdCI6MTYwOTE1NTk3Mn0.syoc5DEIIw2daQC11MqLjbiqq5NNE2_N5-mgr9A-xiZLq9pjhDXlkQ69LBGe_7MIH9CaQu1JgJYlUyypqpMEbg"
        },
        "description": "Bearer token (This token can be generated using the get user details API)"
      }
    }
  },
  "tags": [
    {
      "name": "BusinessEntity"
    },
    {
      "name": "HandleVerfication"
    },
    {
      "name": "Meeting"
    },
    {
      "name": "Partcipants"
    },
    {
      "name": "UserSession"
    },
    {
      "name": "Statistics"
    },
    {
      "name": "MeetingTiming"
    },
    {
      "name": "Token"
    },
    {
      "name": "Recording"
    },
    {
      "name": "RecurringMeeting"
    },
    {
      "name": "Quiz"
    },
    {
      "name": "Poll"
    },
    {
      "name": "Messages"
    },
    {
      "name": "MeetingLogs"
    },
    {
      "name": "BreakoutRoom"
    },
    {
      "name": "AnonymousUser"
    },
    {
      "name": "PollAnswer"
    },
    {
      "name": "QuizAnswer"
    },
    {
      "name": "Bookmark"
    },
    {
      "name": "BreakoutRoomUser"
    },
    {
      "name": "User"
    },
    {
      "name": "Files"
    }
  ]
}